# -*- coding: utf-8 -*-
"""NASA Space Apps.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xTm4VyUdgIuo7CCfY7sZewAVcQZJa2q-

#Bibliotecas
"""

import pandas as pd
import plotly
import numpy as np
import csv
import pywt
import plotly.graph_objs as go
from datetime import datetime, timedelta

"""Dados"""

# Funções

def fundir_colunas(row):
    return (str(row['col2']) + str(row['coltemp2']) + str(row['coltemp3']))

def Bz_denoiser(Bz, threshold):
  noisy_signal = Bz['Bz']

  # Perform a multi-level wavelet decomposition
  coeffs = pywt.wavedec(noisy_signal, 'db1', level=4)
  # Set a threshold to nullify smaller coefficients (assumed to be noise)
  coeffs_thresholded = [pywt.threshold(c, threshold, mode='soft') for c in coeffs]

  # Reconstruct the signal from the thresholded coefficients
  return pywt.waverec(coeffs_thresholded, 'db1')



def data_treatment(df):
  def convert_numeric_to_date(numeric_value):
    # Parse the numeric value into days, hours, and minutes
    days = numeric_value // 10000
    hours_minutes = numeric_value % 10000
    hours = hours_minutes // 100
    minutes = hours_minutes % 100

    # Create a reference date (e.g., January 1st of the current year)
    current_year = int(df['col1'][0])
    reference_date = datetime(current_year - 1, 12, 31)

    # Add the parsed values to the reference date
    result_date = reference_date + timedelta(days=days, hours=hours, minutes=minutes)

    # Format the result date as "dd/MMM" (e.g., "06/Jun")
    formatted_result = result_date.strftime("%d/%b")

    return formatted_result

  df.columns = ['Dados']
  df[['col1', 'col2', 'coltemp2', 'coltemp3', 'Bz']] = df['Dados'].str.split('\\s+', expand=True)
  df.pop('Dados')
  df['coltemp3'], df['coltemp2'] = df['coltemp3'].astype(str).str.zfill(2), df['coltemp2'].astype(str).str.zfill(2)
  df['col2'] = df.apply(fundir_colunas, axis=1)
  df.pop('coltemp2')
  df.pop('coltemp3')
  df['Bz'] = df['Bz'].astype(float)
  df['col2'] = df['col2'].astype(float)
  df['Bz'] = df['Bz'].replace(9999.99, None)

  df['DD/MMM'] = df['col2'].apply(convert_numeric_to_date)

  return df

"""#**2021 / Janeiro a Dezembro**

##ACE def

$Ace  Jan/Dez2019$
"""

url='https://drive.google.com/file/d/1Zz2AjSi4zRuaGLQl9egDAZx-i8nynJga/view?usp=drive_link'
url='https://drive.google.com/uc?id=' + url.split('/')[-2]
ace = pd.read_csv(url)

ace = data_treatment(ace)

"""ACE PLOT"""

fig = go.Figure()

fig.add_scatter(x=ace['DD/MMM'], y=ace['Bz'], mode='lines')

fig.update_xaxes(title_text='Time')

fig.update_yaxes(title_text='Bz')

fig.update_layout(title='Bz component')

fig.update_xaxes(showgrid=True)
fig.update_yaxes(showgrid=True)

fig.update_xaxes(tickangle=45)

fig.show()

"""ACE DENOISING"""

denoised_ace = Bz_denoiser(ace, 15)

fig = go.Figure()

fig.add_scatter(x=ace['DD/MMM'], y = denoised_ace, mode='lines')

fig.update_xaxes(title_text='Time')

fig.update_yaxes(title_text='Bz')

fig.update_layout(title='Bz component')

fig.update_xaxes(showgrid=True)
fig.update_yaxes(showgrid=True)

fig.update_xaxes(tickangle=45)

fig.show()

"""##WIND def

$WIND Jun/Dez 2019$
"""

url='https://drive.google.com/file/d/1lLcgJ2N0MoDgUI9uZzKtZIiSF1ZsO_LO/view?usp=drive_link'
url='https://drive.google.com/uc?id=' + url.split('/')[-2]
wind = pd.read_csv(url)

wind = data_treatment(wind)

"""WIND PLOT"""

fig = go.Figure()

fig.add_scatter(x=wind['DD/MMM'], y=wind['Bz'], mode='lines')

fig.update_xaxes(title_text='Time')

fig.update_yaxes(title_text='Bz')

fig.update_layout(title='Bz component')

fig.update_xaxes(showgrid=True)
fig.update_yaxes(showgrid=True)

fig.update_xaxes(tickangle=45)

fig.show()

"""WIND DENOISING"""

denoised_wind = Bz_denoiser(wind, 15)

fig = go.Figure()

fig.add_scatter(x=wind['DD/MMM'], y=denoised_wind, mode='lines')

fig.update_xaxes(title_text='Time')

fig.update_yaxes(title_text='Bz')

fig.update_layout(title='Bz component')

fig.update_xaxes(showgrid=True)
fig.update_yaxes(showgrid=True)

fig.update_xaxes(tickangle=45)

fig.show()

"""##COMBINAÇÂO DAS 2 def"""

# Assuming you have already created a Plotly figure or subplot
fig = go.Figure()

# Add a scatter or line trace for your data (replace 'x' and 'y' with your data)
# Example:
fig.add_scatter(x=ace['DD/MMM'], y=denoised_ace, mode='lines')
fig.add_scatter(x=wind['DD/MMM'], y=denoised_wind, mode='lines')


# Set x-axis label
fig.update_xaxes(title_text='Time')

# Set y-axis label
fig.update_yaxes(title_text='IMF Bz')

# Set title
fig.update_layout(title='Bz component')

# Enable grid lines
fig.update_xaxes(showgrid=True)
fig.update_yaxes(showgrid=True)

fig.update_xaxes(tickangle=45)

# Show the Plotly figure
fig.show()

"""#**2020 / Janeiro a Dezembro**

##ACE def

$Ace  Jan/Dez2019$
"""

url='https://drive.google.com/file/d/1jgtSrA4JtqLMhdIOOpzFa5nBPhJfo-_S/view?usp=drive_link'
url='https://drive.google.com/uc?id=' + url.split('/')[-2]
ace = pd.read_csv(url)

ace = data_treatment(ace)

"""ACE PLOT"""

fig = go.Figure()

fig.add_scatter(x=ace['DD/MMM'], y=ace['Bz'], mode='lines')

fig.update_xaxes(title_text='Time')

fig.update_yaxes(title_text='Bz')

fig.update_layout(title='Bz component')

fig.update_xaxes(showgrid=True)
fig.update_yaxes(showgrid=True)

fig.update_xaxes(tickangle=45)

fig.show()

"""ACE DENOISING"""

denoised_ace = Bz_denoiser(ace, 15)

fig = go.Figure()

fig.add_scatter(x=ace['DD/MMM'], y = denoised_ace, mode='lines')

fig.update_xaxes(title_text='Time')

fig.update_yaxes(title_text='Bz')

fig.update_layout(title='Bz component')

fig.update_xaxes(showgrid=True)
fig.update_yaxes(showgrid=True)

fig.update_xaxes(tickangle=45)

fig.show()

"""##WIND def

$WIND Jun/Dez 2019$
"""

url='https://drive.google.com/file/d/1JNnkBOADZWkLfGSxfQmZa9S6BoPB4srw/view?usp=drive_link'
url='https://drive.google.com/uc?id=' + url.split('/')[-2]
wind = pd.read_csv(url)

wind = data_treatment(wind)

"""WIND PLOT"""

fig = go.Figure()

fig.add_scatter(x=wind['DD/MMM'], y=wind['Bz'], mode='lines')

fig.update_xaxes(title_text='Time')

fig.update_yaxes(title_text='Bz')

fig.update_layout(title='Bz component')

fig.update_xaxes(showgrid=True)
fig.update_yaxes(showgrid=True)

fig.update_xaxes(tickangle=45)

fig.show()

"""WIND DENOISING"""

denoised_wind = Bz_denoiser(wind, 15)

fig = go.Figure()

fig.add_scatter(x=wind['DD/MMM'], y=denoised_wind, mode='lines')

fig.update_xaxes(title_text='Time')

fig.update_yaxes(title_text='Bz')

fig.update_layout(title='Bz component')

fig.update_xaxes(showgrid=True)
fig.update_yaxes(showgrid=True)

fig.update_xaxes(tickangle=45)

fig.show()

"""##COMBINAÇÂO DAS 2 def"""

# Assuming you have already created a Plotly figure or subplot
fig = go.Figure()

# Add a scatter or line trace for your data (replace 'x' and 'y' with your data)
# Example:
fig.add_scatter(x=ace['DD/MMM'], y=denoised_ace, mode='lines')
fig.add_scatter(x=wind['DD/MMM'], y=denoised_wind, mode='lines')


# Set x-axis label
fig.update_xaxes(title_text='Time')

# Set y-axis label
fig.update_yaxes(title_text='IMF Bz')

# Set title
fig.update_layout(title='Bz component')

# Enable grid lines
fig.update_xaxes(showgrid=True)
fig.update_yaxes(showgrid=True)

fig.update_xaxes(tickangle=45)

# Show the Plotly figure
fig.show()

"""#**2019 / Janeiro a Dezembro**

##ACE def

$Ace  Jan/Dez2019$
"""

url='https://drive.google.com/file/d/106554FKP2mS4yY6HkfQ7wygkkOSrYDwK/view?usp=sharing'
url='https://drive.google.com/uc?id=' + url.split('/')[-2]
ace = pd.read_csv(url)

ace = data_treatment(ace)

"""ACE PLOT"""

fig = go.Figure()

fig.add_scatter(x=ace['DD/MMM'], y=ace['Bz'], mode='lines')

fig.update_xaxes(title_text='Time')

fig.update_yaxes(title_text='Bz')

fig.update_layout(title='Bz component')

fig.update_xaxes(showgrid=True)
fig.update_yaxes(showgrid=True)

fig.update_xaxes(tickangle=45)

fig.show()

"""ACE DENOISING"""

denoised_ace = Bz_denoiser(ace, 15)

fig = go.Figure()

fig.add_scatter(x=ace['DD/MMM'], y = denoised_ace, mode='lines')

fig.update_xaxes(title_text='Time')

fig.update_yaxes(title_text='Bz')

fig.update_layout(title='Bz component')

fig.update_xaxes(showgrid=True)
fig.update_yaxes(showgrid=True)

fig.update_xaxes(tickangle=45)

fig.show()

"""##WIND def

$WIND Jun/Dez 2019$
"""

url='https://drive.google.com/file/d/1gTfggP6G61b4n1922Yd2DWbd6Vn50KND/view?usp=drive_link'
url='https://drive.google.com/uc?id=' + url.split('/')[-2]
wind = pd.read_csv(url)

wind = data_treatment(wind)

"""WIND PLOT"""

fig = go.Figure()

fig.add_scatter(x=wind['DD/MMM'], y=wind['Bz'], mode='lines')

fig.update_xaxes(title_text='Time')

fig.update_yaxes(title_text='Bz')

fig.update_layout(title='Bz component')

fig.update_xaxes(showgrid=True)
fig.update_yaxes(showgrid=True)

fig.update_xaxes(tickangle=45)

fig.show()

"""WIND DENOISING"""

denoised_wind = Bz_denoiser(wind, 15)

fig = go.Figure()

fig.add_scatter(x=wind['DD/MMM'], y=denoised_wind, mode='lines')

fig.update_xaxes(title_text='Time')

fig.update_yaxes(title_text='Bz')

fig.update_layout(title='Bz component')

fig.update_xaxes(showgrid=True)
fig.update_yaxes(showgrid=True)

fig.update_xaxes(tickangle=45)

fig.show()

"""##COMBINAÇÂO DAS 2 def"""

# Assuming you have already created a Plotly figure or subplot
fig = go.Figure()

# Add a scatter or line trace for your data (replace 'x' and 'y' with your data)
# Example:
fig.add_scatter(x=ace['DD/MMM'], y=denoised_ace, mode='lines')
fig.add_scatter(x=wind['DD/MMM'], y=denoised_wind, mode='lines')


# Set x-axis label
fig.update_xaxes(title_text='Time')

# Set y-axis label
fig.update_yaxes(title_text='IMF Bz')

# Set title
fig.update_layout(title='Bz component')

# Enable grid lines
fig.update_xaxes(showgrid=True)
fig.update_yaxes(showgrid=True)

fig.update_xaxes(tickangle=45)

# Show the Plotly figure
fig.show()

"""#**2018 / Janeiro a Dezembro**

##ACE def

$Ace  Jan/Dez2018$
"""

url='https://drive.google.com/file/d/1EM7X-7GnzbzSpLrfKEl-FCXA-daZhY3k/view?usp=drive_link'
url='https://drive.google.com/uc?id=' + url.split('/')[-2]
ace = pd.read_csv(url)

ace = data_treatment(ace)

"""ACE PLOT"""

fig = go.Figure()

fig.add_scatter(x=ace['DD/MMM'], y=ace['Bz'], mode='lines')

fig.update_xaxes(title_text='Time')

fig.update_yaxes(title_text='Bz')

fig.update_layout(title='Bz component')

fig.update_xaxes(showgrid=True)
fig.update_yaxes(showgrid=True)

fig.update_xaxes(tickangle=45)

fig.show()

"""ACE DENOISING"""

denoised_ace = Bz_denoiser(ace, 15)

fig = go.Figure()

fig.add_scatter(x=ace['DD/MMM'], y = denoised_ace, mode='lines')

fig.update_xaxes(title_text='Time')

fig.update_yaxes(title_text='Bz')

fig.update_layout(title='Bz component')

fig.update_xaxes(showgrid=True)
fig.update_yaxes(showgrid=True)

fig.update_xaxes(tickangle=45)

fig.show()

"""##DSCOVR def

$DSCOVR Jan/Dez 2018$
"""

url='https://drive.google.com/file/d/1cEoyh6gMBGt119g7wSESBEfUbKeuQ2eV/view?usp=drive_link'
url='https://drive.google.com/uc?id=' + url.split('/')[-2]
dscovr = pd.read_csv(url)

dscovr = data_treatment(dscovr)

"""DSCOVR PLOT"""

fig = go.Figure()

fig.add_scatter(x=dscovr['DD/MMM'], y=dscovr['Bz'], mode='lines')

fig.update_xaxes(title_text='Time')

fig.update_yaxes(title_text='Bz')

fig.update_layout(title='Bz component')

fig.update_xaxes(showgrid=True)
fig.update_yaxes(showgrid=True)

fig.update_xaxes(tickangle=45)

fig.show()

"""DSCOVR DENOISING"""

denoised_dscovr = Bz_denoiser(dscovr, 15)

fig = go.Figure()

fig.add_scatter(x=dscovr['DD/MMM'], y=denoised_dscovr, mode='lines')

fig.update_xaxes(title_text='Time')

fig.update_yaxes(title_text='Bz')

fig.update_layout(title='Bz component')

fig.update_xaxes(showgrid=True)
fig.update_yaxes(showgrid=True)

fig.update_xaxes(tickangle=45)

fig.show()

"""##WIND def

$WIND Jun/Dez 2018$
"""

url='https://drive.google.com/file/d/167WvnUs1zZymZRiCFbYwuDjxGacZKOoP/view?usp=drive_link'
url='https://drive.google.com/uc?id=' + url.split('/')[-2]
wind = pd.read_csv(url)

wind = data_treatment(wind)

"""WIND PLOT"""

fig = go.Figure()

fig.add_scatter(x=wind['DD/MMM'], y=wind['Bz'], mode='lines')

fig.update_xaxes(title_text='Time')

fig.update_yaxes(title_text='Bz')

fig.update_layout(title='Bz component')

fig.update_xaxes(showgrid=True)
fig.update_yaxes(showgrid=True)

fig.update_xaxes(tickangle=45)

fig.show()

"""WIND DENOISING"""

denoised_wind = Bz_denoiser(wind, 15)

fig = go.Figure()

fig.add_scatter(x=wind['DD/MMM'], y=denoised_wind, mode='lines')

fig.update_xaxes(title_text='Time')

fig.update_yaxes(title_text='Bz')

fig.update_layout(title='Bz component')

fig.update_xaxes(showgrid=True)
fig.update_yaxes(showgrid=True)

fig.update_xaxes(tickangle=45)

fig.show()

"""##COMBINAÇÂO DAS 3 def"""

# Assuming you have already created a Plotly figure or subplot
fig = go.Figure()

# Add a scatter or line trace for your data (replace 'x' and 'y' with your data)
# Example:
fig.add_scatter(x=ace['DD/MMM'], y=denoised_ace, mode='lines')
fig.add_scatter(x=wind['DD/MMM'], y=denoised_wind, mode='lines')
fig.add_scatter(x=dscovr['DD/MMM'], y=denoised_dscovr, mode='lines')


# Set x-axis label
fig.update_xaxes(title_text='Time')

# Set y-axis label
fig.update_yaxes(title_text='IMF Bz')

# Set title
fig.update_layout(title='Bz component')

# Enable grid lines
fig.update_xaxes(showgrid=True)
fig.update_yaxes(showgrid=True)

fig.update_xaxes(tickangle=45)

# Show the Plotly figure
fig.show()

"""#**2017 / Janeiro a Dezembro**

##ACE def

$Ace  Jan/Dez2018$
"""

url='https://drive.google.com/file/d/1oBvrOZkGyBcDq1-MYS0HICP6P1Hl_J0l/view?usp=drive_link'
url='https://drive.google.com/uc?id=' + url.split('/')[-2]
ace = pd.read_csv(url)

ace = data_treatment(ace)

"""ACE PLOT"""

fig = go.Figure()

fig.add_scatter(x=ace['DD/MMM'], y=ace['Bz'], mode='lines')

fig.update_xaxes(title_text='Time')

fig.update_yaxes(title_text='Bz')

fig.update_layout(title='Bz component')

fig.update_xaxes(showgrid=True)
fig.update_yaxes(showgrid=True)

fig.update_xaxes(tickangle=45)

fig.show()

"""ACE DENOISING"""

denoised_ace = Bz_denoiser(ace, 15)

fig = go.Figure()

fig.add_scatter(x=ace['DD/MMM'], y = denoised_ace, mode='lines')

fig.update_xaxes(title_text='Time')

fig.update_yaxes(title_text='Bz')

fig.update_layout(title='Bz component')

fig.update_xaxes(showgrid=True)
fig.update_yaxes(showgrid=True)

fig.update_xaxes(tickangle=45)

fig.show()

"""##DSCOVR def

$DSCOVR Jan/Dez 2018$
"""

url='https://drive.google.com/file/d/1q-LH4rE-Uoc6memeCNEMZdm0bCujizcS/view?usp=drive_link'
url='https://drive.google.com/uc?id=' + url.split('/')[-2]
dscovr = pd.read_csv(url)

dscovr = data_treatment(dscovr)

"""DSCOVR PLOT"""

fig = go.Figure()

fig.add_scatter(x=dscovr['DD/MMM'], y=dscovr['Bz'], mode='lines')

fig.update_xaxes(title_text='Time')

fig.update_yaxes(title_text='Bz')

fig.update_layout(title='Bz component')

fig.update_xaxes(showgrid=True)
fig.update_yaxes(showgrid=True)

fig.update_xaxes(tickangle=45)

fig.show()

"""DSCOVR DENOISING"""

denoised_dscovr = Bz_denoiser(dscovr, 15)

fig = go.Figure()

fig.add_scatter(x=dscovr['DD/MMM'], y=denoised_dscovr, mode='lines')

fig.update_xaxes(title_text='Time')

fig.update_yaxes(title_text='Bz')

fig.update_layout(title='Bz component')

fig.update_xaxes(showgrid=True)
fig.update_yaxes(showgrid=True)

fig.update_xaxes(tickangle=45)

fig.show()

"""##WIND def

$WIND Jun/Dez 2018$
"""

url='https://drive.google.com/file/d/1os3BuQ-YHWMoSytlCwvFpU-qfqQnOQWs/view?usp=drive_link'
url='https://drive.google.com/uc?id=' + url.split('/')[-2]
wind = pd.read_csv(url)

wind = data_treatment(wind)

"""WIND PLOT"""

fig = go.Figure()

fig.add_scatter(x=wind['DD/MMM'], y=wind['Bz'], mode='lines')

fig.update_xaxes(title_text='Time')

fig.update_yaxes(title_text='Bz')

fig.update_layout(title='Bz component')

fig.update_xaxes(showgrid=True)
fig.update_yaxes(showgrid=True)

fig.update_xaxes(tickangle=45)

fig.show()

"""WIND DENOISING"""

denoised_wind = Bz_denoiser(wind, 15)

fig = go.Figure()

fig.add_scatter(x=wind['DD/MMM'], y=denoised_wind, mode='lines')

fig.update_xaxes(title_text='Time')

fig.update_yaxes(title_text='Bz')

fig.update_layout(title='Bz component')

fig.update_xaxes(showgrid=True)
fig.update_yaxes(showgrid=True)

fig.update_xaxes(tickangle=45)

fig.show()

"""##COMBINAÇÂO DAS 3 def"""

# Assuming you have already created a Plotly figure or subplot
fig = go.Figure()

# Add a scatter or line trace for your data (replace 'x' and 'y' with your data)
# Example:
fig.add_scatter(x=ace['DD/MMM'], y=denoised_ace, mode='lines')
fig.add_scatter(x=wind['DD/MMM'], y=denoised_wind, mode='lines')
fig.add_scatter(x=dscovr['DD/MMM'], y=denoised_dscovr, mode='lines')


# Set x-axis label
fig.update_xaxes(title_text='Time')

# Set y-axis label
fig.update_yaxes(title_text='IMF Bz')

# Set title
fig.update_layout(title='Bz component')

# Enable grid lines
fig.update_xaxes(showgrid=True)
fig.update_yaxes(showgrid=True)

fig.update_xaxes(tickangle=45)

# Show the Plotly figure
fig.show()

"""#**2016 / Junho a Dezembro**

##ACE def

$Ace  Jan/Dez2018$
"""

url='https://drive.google.com/file/d/1bHeeK7_PX54LUMedZWDw38hsvXC1WkCL/view?usp=drive_link'
url='https://drive.google.com/uc?id=' + url.split('/')[-2]
ace = pd.read_csv(url)

ace = data_treatment(ace)

"""ACE PLOT"""

fig = go.Figure()

fig.add_scatter(x=ace['DD/MMM'], y=ace['Bz'], mode='lines')

fig.update_xaxes(title_text='Time')

fig.update_yaxes(title_text='Bz')

fig.update_layout(title='Bz component')

fig.update_xaxes(showgrid=True)
fig.update_yaxes(showgrid=True)

fig.update_xaxes(tickangle=45)

fig.show()

"""ACE DENOISING"""

denoised_ace = Bz_denoiser(ace, 15)

fig = go.Figure()

fig.add_scatter(x=ace['DD/MMM'], y = denoised_ace, mode='lines')

fig.update_xaxes(title_text='Time')

fig.update_yaxes(title_text='Bz')

fig.update_layout(title='Bz component')

fig.update_xaxes(showgrid=True)
fig.update_yaxes(showgrid=True)

fig.update_xaxes(tickangle=45)

fig.show()

"""##DSCOVR def

$DSCOVR Jan/Dez 2018$
"""

url='https://drive.google.com/file/d/1nDxvygMe4FCgiwU48z0Diyjvnb7Ov8v5/view?usp=drive_link'
url='https://drive.google.com/uc?id=' + url.split('/')[-2]
dscovr = pd.read_csv(url)

dscovr = data_treatment(dscovr)

"""DSCOVR PLOT"""

fig = go.Figure()

fig.add_scatter(x=dscovr['DD/MMM'], y=dscovr['Bz'], mode='lines')

fig.update_xaxes(title_text='Time')

fig.update_yaxes(title_text='Bz')

fig.update_layout(title='Bz component')

fig.update_xaxes(showgrid=True)
fig.update_yaxes(showgrid=True)

fig.update_xaxes(tickangle=45)

fig.show()

"""DSCOVR DENOISING"""

denoised_dscovr = Bz_denoiser(dscovr, 15)

fig = go.Figure()

fig.add_scatter(x=dscovr['DD/MMM'], y=denoised_dscovr, mode='lines')

fig.update_xaxes(title_text='Time')

fig.update_yaxes(title_text='Bz')

fig.update_layout(title='Bz component')

fig.update_xaxes(showgrid=True)
fig.update_yaxes(showgrid=True)

fig.update_xaxes(tickangle=45)

fig.show()

"""##WIND def

$WIND Jun/Dez 2018$
"""

url='https://drive.google.com/file/d/1fAlfIowiT6X7yXIwS2EsBitr6lIuRjM7/view?usp=drive_link'
url='https://drive.google.com/uc?id=' + url.split('/')[-2]
wind = pd.read_csv(url)

wind = data_treatment(wind)

"""WIND PLOT"""

fig = go.Figure()

fig.add_scatter(x=wind['DD/MMM'], y=wind['Bz'], mode='lines')

fig.update_xaxes(title_text='Time')

fig.update_yaxes(title_text='Bz')

fig.update_layout(title='Bz component')

fig.update_xaxes(showgrid=True)
fig.update_yaxes(showgrid=True)

fig.update_xaxes(tickangle=45)

fig.show()

"""WIND DENOISING"""

denoised_wind = Bz_denoiser(wind, 15)

fig = go.Figure()

fig.add_scatter(x=wind['DD/MMM'], y=denoised_wind, mode='lines')

fig.update_xaxes(title_text='Time')

fig.update_yaxes(title_text='Bz')

fig.update_layout(title='Bz component')

fig.update_xaxes(showgrid=True)
fig.update_yaxes(showgrid=True)

fig.update_xaxes(tickangle=45)

fig.show()

"""##COMBINAÇÂO DAS 3 def"""

# Assuming you have already created a Plotly figure or subplot
fig = go.Figure()

# Add a scatter or line trace for your data (replace 'x' and 'y' with your data)
# Example:
fig.add_scatter(x=ace['DD/MMM'], y=denoised_ace, mode='lines')
fig.add_scatter(x=wind['DD/MMM'], y=denoised_wind, mode='lines')
fig.add_scatter(x=dscovr['DD/MMM'], y=denoised_dscovr, mode='lines')


# Set x-axis label
fig.update_xaxes(title_text='Time')

# Set y-axis label
fig.update_yaxes(title_text='IMF Bz')

# Set title
fig.update_layout(title='Bz component')

# Enable grid lines
fig.update_xaxes(showgrid=True)
fig.update_yaxes(showgrid=True)

fig.update_xaxes(tickangle=45)

# Show the Plotly figure
fig.show()

"""#**new**"""

